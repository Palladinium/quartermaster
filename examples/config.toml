[server]
## The root URL of this registry.
## This is required, and it will be used to populate the response for the /index/config.json file.
## NOTE: If you get mysterious 404s on publish, try removing trailing slashes from this setting,
## or set RUST_DEBUG=quartermaster=debug and inspect the logs to see what URLs cargo is requesting.
root_url = "https://foo.bar"
## For example, with the above setting, set the registry URL in `.cargo/config.toml` to
## `sparse+https://foo.bar/index/`

## Addresses to bind to. Defaults to 0.0.0.0:80 and [::]:80.
bind = ["10.1.1.1:80"]

[auth]

## Disable auth entirely, and allow all requests. This is generally a bad idea.
# type = "none"

## Simple auth based on a single token.
## Quartermaster will generate a token on startup and store it in `token_file`.
## You can then give that token to cargo to authenticate your requests.
type = "auto_token"
##  The file to store the token in. Optional, defaults to `/var/lib/quartermaster/token`.
token_file = "/crate-token"

[storage]

## Local filesystem storage

type = "local"
path = "/crates"

## S3-backed storage.
## The bucket and region keys are required.
## If none of the specific auth methods are specified, rust-s3 will attempt to find valid credentials automatically.
# type = "s3"
# bucket = "my-crates"
# region = "ap-southeast-2"

## Explicit access/secret key authentication, and optionally a security and session token.
# aws_access_key_id = "foo"
# aws_secret_access_key = "shoosh"
# aws_security_token = "foo"
# aws_session_token = "foo"

## Fetch access key through an STS request.
## The unprefixed `AWS_ROLE_ARN` `AWS_WEB_IDENTITY_TOKEN_FILE` environment variables are also checked if the corresponding config value isn't set.
# sts_session_name = "quartermaster"
# sts_role_arn = "foo"
# sts_web_identity_token_file = "foo"

## Use profile credentials. This reads from ~/.aws/credentials.
## If profile_section is specified, use that particular section in the credential file.
# use_profile_credentials = true
# profile_section = "quartermaster"

## Use instance credentials.
# use_instance_credentials = true
